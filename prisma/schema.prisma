datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  userId           BigInt    @id @default(autoincrement())
  nickname         String?   @db.VarChar(10)
  name             String?   @db.VarChar(10)
  studentId        String?   @db.VarChar(10)
  department       String?   @db.VarChar(20)
  status           String    @db.VarChar(10)
  schoolEmail      String?   @db.VarChar(50)
  googleEmail      String?   @db.VarChar(50)
  googleNickname   String?   @db.VarChar(50)
  profileImagePath String?   @db.VarChar(200)
  comment          Comment[]
  alarm            Alarm[]
  cAlarm           comment_alarm[]
  cAlarmOff        comment_alarmoff[]
  place            String?   @db.VarChar(300)
  tag              String?   @db.VarChar(300)
}

model Posts {
  postId      BigInt    @unique @default(autoincrement())
  userId      BigInt
  title       String?   @db.VarChar(200)
  content     String    @db.VarChar(500)
  imagePath   String?   @db.VarChar(200)
  publishDate DateTime  @default(now())
  place       String    @db.VarChar(100)
  placeDetail String    @db.VarChar(100)
  status      String    @db.VarChar(20)
  tag         String    @db.VarChar(100)
  postStatus  String    @db.VarChar(20)
  comment     Comment[]
  alarm       Alarm[]
  cAlarmOff   comment_alarmoff[]
  cAlarm      comment_alarm[]
}

model Comment {
  commentId   BigInt   @id @default(autoincrement())
  user        Users?   @relation(fields: [userId], references: [userId])
  userId      BigInt?
  post        Posts?   @relation(fields: [postId], references: [postId])
  postId      BigInt?
  content     String?  @db.VarChar(500)
  commentDate DateTime @default(now())
  cAlarm      comment_alarm[]
}

model Alarm {
  alarmId    BigInt  @id @default(autoincrement())
  user       Users   @relation(fields: [userId], references: [userId])
  userId     BigInt
  post       Posts   @relation(fields: [postId], references: [postId])
  postId     BigInt
  title      String  @db.VarChar(200)
  place      String  @db.VarChar(100)
  tag        String  @db.VarChar(30)
  readStatus String? @db.VarChar(20)
  status     String  @db.VarChar(20)
}

model comment_alarm {
  cAlarmId   BigInt  @id @default(autoincrement())
  user       Users   @relation(fields: [userId], references: [userId])
  userId     BigInt
  comment    Comment @relation(fields: [commentId], references: [commentId])
  commentId  BigInt  
  post       Posts   @relation(fields: [postId], references: [postId])
  postId     BigInt
  uniqueId   String  @unique
  content    String  @db.VarChar(500)
  readStatus String  @db.VarChar(20)
}

model comment_alarmoff {
  cAlarmOffId  BigInt @id @default(autoincrement())
  user         Users  @relation(fields: [userId], references: [userId])
  userId       BigInt
  post         Posts  @relation(fields: [postId], references: [postId])
  postId       BigInt
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["extendedWhereUnique"]
}